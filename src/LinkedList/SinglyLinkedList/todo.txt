
// insertAtEnd(data)
// insertAtEndWithoutTail()
// insertAtHead(data)
// insertAtIndex(index, data)


// deleteAtIndex(index);
// deleteAtEnd()
// deleteAtHead()


// length()
// display()
// reverseLinkedList()
// displayReverseRecursively()
// displayRecursively()
// getElement(index)


// makeCircular()
// isPalindrome()
// hasCycle()


// Check List is Palindrome or not
// Detect a cycle in LL & Trick to remove Cycle



============================
Interview Questions
==========================

1. Find nth node from the end of the list.
2. Find nth node from the end of list. (Note: Only in One traversal).

3. Remove nth node from the end of the linked list. (Note: in one Traversal)


4. Finding intersection of two Linked list.









