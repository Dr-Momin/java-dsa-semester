// TODO: SIMPLE NECESSARY Functions
// isEmpty()
// printAll() or display()
// length()
// displayRecursively()
// getElement(int index)


// TODO: BASIC Functions
// insertAtBeginning(int data)
// insertAtBeginning(Node node)
// insertAtEnd(int data)
// insertAtEnd(Node node)
// insertAtEndWithoutTail(int data)
// insertAfterName(int data, Node node)
// insertBeforeName(int data, Node node)
// deleteAtIndex(index);
// deleteAtEnd()
// deleteAtHead()


// TODO: ADVANCE Functions
// makeCircular()
// displayCircular()
// isCircularLL()  or hasCycle()
// isPalindrome()
// findNthNodeFromEnd(int index)
// deleteNthNodeFromEnd(int index)
// reverseLinkedList()
// displayReverseRecursively()




============================
Interview Questions
==========================

1. Find nth node from the end of the list.
2. Find nth node from the end of list. (Note: Only in One traversal).

3. Remove nth node from the end of the linked list. (Note: in one Traversal)

4. Finding intersection of two Linked list. (LeetCode)